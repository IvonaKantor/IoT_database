-- Devices Table
CREATE TABLE Devices (
                         id int NOT NULL PRIMARY KEY,
                         device_name varchar(20) NOT NULL,
                         status varchar(20) NOT NULL,
                         last_updating date NOT NULL,
                         device_type int NOT NULL check (device_type IN (0, 1, 2)),
                         serial_number varchar(20) UNIQUE,
                         location varchar(20) NOT NULL
);

-- Meta Table
CREATE TABLE Meta (
                      device_id int NOT NULL,
                      key int NOT NULL,
                      value int,
                      FOREIGN KEY (device_id) REFERENCES Devices(id)
);

-- Events Table
CREATE TABLE Events (
                        id int NOT NULL PRIMARY KEY,
                        device_id int NOT NULL,
                        name varchar(20),
                        value varchar(255),
                        timestamp date,
                        created_at date,
                        type varchar(20) NOT NULL check (type IN ('info', 'warning', 'error')),
                        FOREIGN KEY (device_id) REFERENCES Devices(id)
);

-- Logs Table
CREATE TABLE Logs (
                      id int NOT NULL PRIMARY KEY,
                      level varchar(20) NOT NULL check (level IN ('debug', 'info', 'warn', 'error')),
                      timestamp date NOT NULL,
                      message varchar(20)
);

-- Registry Table
CREATE TABLE Registry (
                          id int NOT NULL PRIMARY KEY,
                          created_date date NOT NULL,
                          type_logs varchar(20) NOT NULL check (type_logs IN ('XML', 'JSON', 'plain')),
                          description varchar(255)
);

-- Settings Table
CREATE TABLE Settings (
                          id int NOT NULL PRIMARY KEY,
                          device_id int NOT NULL,
                          host_name varchar(20),
                          project varchar(255),
                          registry varchar(255),
                          created_date date,
                          acktime_date date,
                          accepted_date date,
                          FOREIGN KEY (device_id) REFERENCES Devices(id)
);

-- Firmware Table
CREATE TABLE Firmware (
                          id int NOT NULL PRIMARY KEY,
                          major int,
                          minor int,
                          patch int,
                          released_date date
);

-- DevicesFirmware Table
CREATE TABLE DevicesFirmware (
                                 id int NOT NULL PRIMARY KEY,
                                 device_id int NOT NULL,
                                 firmware_id int NOT NULL,
                                 started_date date,
                                 completed_date date,
                                 attempt int,
                                 error_message varchar(20),
                                 FOREIGN KEY (device_id) REFERENCES Devices(id),
                                 FOREIGN KEY (firmware_id) REFERENCES Firmware(id)
);

-- Credential Table
CREATE TABLE Credential (
                            id int NOT NULL PRIMARY KEY,
                            type varchar(20) NOT NULL CHECK (type IN ('ES256', 'RS256')),
                            public_key varchar(255) NOT NULL,
                            created_date date NOT NULL,
                            expired_date date
);

-- Configurations Table
CREATE TABLE Configurations (
                                id int NOT NULL PRIMARY KEY,
                                version varchar(20),
                                creation_date date,
                                updating_date date,
                                is_accepted boolean DEFAULT FALSE,
                                MQTT_broker_url varchar(255),
                                MQTT_topic varchar(255),
                                created_at date
);

-- Config_pin Table
CREATE TABLE Config_pin (
                            id int NOT NULL PRIMARY KEY,
                            config_id int NOT NULL,
                            AIO_id int,
                            DIO_id int,
                            SPI_id int,
                            I2C_id int,
                            FOREIGN KEY (config_id) REFERENCES Configurations(id),
                            FOREIGN KEY (AIO_id) REFERENCES AIO(pin),
                            FOREIGN KEY (DIO_id) REFERENCES DIO(pin),
                            FOREIGN KEY (SPI_id) REFERENCES SPI(pin),
                            FOREIGN KEY (I2C_id) REFERENCES I2C(pin)
);

-- AIO Table
CREATE TABLE AIO (
                     pin int NOT NULL PRIMARY KEY,
                     mode varchar(20),
                     period date,
                     pin_number int NOT NULL,
                     voltage_range varchar(20),
                     description varchar(20)
);

-- DIO Table
CREATE TABLE DIO (
                     pin int NOT NULL PRIMARY KEY,
                     mode varchar(20),
                     period date,
                     pin_number int NOT NULL,
                     direction varchar(20),
                     description varchar(20)
);

-- SPI Table
CREATE TABLE SPI (
                     pin int NOT NULL PRIMARY KEY,
                     mode varchar(20),
                     mosi_pin int NOT NULL,
                     miso_pin int NOT NULL,
                     sclk_pin int NOT NULL,
                     cs_pin int NOT NULL,
                     description varchar(20)
);

-- I2C Table
CREATE TABLE I2C (
                     pin int NOT NULL PRIMARY KEY,
                     mode varchar(20),
                     period date,
                     sda_pin int NOT NULL,
                     scl_pin int NOT NULL,
                     description varchar(20)
);
