DROP TABLE DEVICES CASCADE CONSTRAINTS;
DROP TABLE META CASCADE CONSTRAINTS;
DROP TABLE EVENTS CASCADE CONSTRAINTS;
DROP TABLE LOGS CASCADE CONSTRAINTS;
DROP TABLE REGISTRY CASCADE CONSTRAINTS;
DROP TABLE SETTINGS CASCADE CONSTRAINTS;
DROP TABLE FIRMWARE CASCADE CONSTRAINTS;
DROP TABLE DEVICES_FIRMWARE CASCADE CONSTRAINTS;
DROP TABLE CREDENTIAL CASCADE CONSTRAINTS;
DROP TABLE CONFIGURATIONS CASCADE CONSTRAINTS;
DROP TABLE CONFIG_PIN CASCADE CONSTRAINTS;
DROP TABLE AIO CASCADE CONSTRAINTS;
DROP TABLE DIO CASCADE CONSTRAINTS;
DROP TABLE SPI CASCADE CONSTRAINTS;
DROP TABLE I2C CASCADE CONSTRAINTS;


CREATE TABLE DEVICES (
                         id INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                         device_name VARCHAR(20) NOT NULL,
                         status VARCHAR(20) NOT NULL,
                         last_updating DATE NOT NULL,
                         device_type INT NOT NULL check (DEVICE_TYPE IN (0, 1, 2)),
                         serial_number VARCHAR(20) UNIQUE,
                         location VARCHAR(20) NOT NULL
);

CREATE TABLE META (
                      device_id INT NOT NULL,
                      key VARCHAR(20) NOT NULL,
                      value INT
);

CREATE TABLE EVENTS (
                        id INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                        device_id INT NOT NULL,
                        name VARCHAR(20),
                        value VARCHAR(255),
                        timestamp DATE,
                        created_date DATE,
                        type VARCHAR(20) NOT NULL check (type IN ('info', 'warning', 'error'))
);

CREATE TABLE LOGS (
                      id INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                      "level" VARCHAR(20) NOT NULL check ("level" IN ('debug', 'info', 'warn', 'error')),
                      timestamp DATE NOT NULL,
                      message VARCHAR(20)
);

CREATE TABLE REGISTRY (
                          id INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                          name VARCHAR(20) NOT NULL,
                          created_date DATE NOT NULL,
                          type_logs VARCHAR(20) NOT NULL check (type_logs IN ('XML', 'JSON', 'plain')),
                          description VARCHAR(255)
);

CREATE TABLE SETTINGS (
                          id INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                          device_id INT NOT NULL,
                          host_name VARCHAR(20),
                          project VARCHAR(255),
                          registry VARCHAR(255),
                          created_date DATE,
                          acktime_date DATE,
                          accepted_date DATE
);

CREATE TABLE FIRMWARE (
                          id INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                          major INT,
                          minor INT,
                          patch INT,
                          released_date DATE
);

CREATE TABLE DEVICES_FIRMWARE (
                                 id INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                                 device_id INT NOT NULL,
                                 firmware_id INT NOT NULL,
                                 started_date DATE,
                                 completed_date DATE,
                                 attempt INT,
                                 error_message VARCHAR(20)
);

CREATE TABLE CREDENTIAL (
                            id INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                            type VARCHAR(20) NOT NULL CHECK (type IN ('ES256', 'RS256')),
                            public_key VARCHAR(255) NOT NULL,
                            created_date DATE NOT NULL,
                            expired_date DATE
);

CREATE TABLE CONFIGURATIONS (
                                id INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                                version VARCHAR(20) NOT NULL,
                                created_date DATE NOT NULL,
                                sent_date DATE NOT NULL,
                                verificated_date DATE NOT NULL,
                                accepted boolean DEFAULT FALSE
);

CREATE TABLE CONFIG_PIN (
                            id INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                            config_id INT NOT NULL,
                            AIO_id INT,
                            DIO_id INT,
                            SPI_id INT,
                            I2C_id INT
);

CREATE TABLE AIO (
                     pin INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                     "mode" VARCHAR(20),
                     period DATE,
                     pin_number INT NOT NULL,
                     voltage_range VARCHAR(20),
                     description VARCHAR(20)
);

CREATE TABLE DIO (
                     pin INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                     "mode" VARCHAR(20),
                     period DATE,
                     pin_number INT NOT NULL,
                     direction VARCHAR(20),
                     description VARCHAR(20)                        
);

CREATE TABLE SPI (
                     pin INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                     "mode" VARCHAR(20),
                     mosi_pin INT NOT NULL,
                     miso_pin INT NOT NULL,
                     sclk_pin INT NOT NULL,
                     cs_pin INT NOT NULL,
                     description VARCHAR(20)
);

CREATE TABLE I2C (
                     pin INT NOT NULL PRIMARY KEY USING INDEX ENABLE,
                     "mode" VARCHAR(20),
                     period DATE,
                     sda_pin INT NOT NULL,
                     scl_pin INT NOT NULL,
                     description VARCHAR(20)
);

ALTER TABLE META ADD CONSTRAINT "META_FK" FOREIGN KEY (device_id) REFERENCES DEVICES(id);
ALTER TABLE EVENTS ADD CONSTRAINT "EVENTS_FK" FOREIGN KEY (device_id) REFERENCES DEVICES(id);
ALTER TABLE SETTINGS ADD CONSTRAINT "SETTINGS_FK" FOREIGN KEY (device_id) REFERENCES DEVICES(id);
ALTER TABLE DEVICES_FIRMWARE ADD CONSTRAINT "D_FIRMWARE_FK" FOREIGN KEY (device_id) REFERENCES DEVICES(id);
ALTER TABLE DEVICES_FIRMWARE ADD CONSTRAINT "D_FIRMWARE_FK1" FOREIGN KEY (firmware_id) REFERENCES FIRMWARE(id);
ALTER TABLE CONFIG_PIN ADD CONSTRAINT "CONF_FK" FOREIGN KEY (config_id) REFERENCES CONFIGURATIONS(id);
ALTER TABLE CONFIG_PIN ADD CONSTRAINT "AIO_FK" FOREIGN KEY (AIO_id) REFERENCES AIO(id);
ALTER TABLE CONFIG_PIN ADD CONSTRAINT "DIO_FK" FOREIGN KEY (DIO_id) REFERENCES DIO(id);
ALTER TABLE CONFIG_PIN ADD CONSTRAINT "SPI_FK" FOREIGN KEY (SPI_id) REFERENCES SPI(id);
ALTER TABLE CONFIG_PIN ADD CONSTRAINT "I2C_FK" FOREIGN KEY (I2C_id) REFERENCES I2C(id);
